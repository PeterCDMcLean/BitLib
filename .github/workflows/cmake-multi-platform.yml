# .github/workflows/main.yaml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '*.md'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '*.md'

jobs:
  run-matrix:
    uses: ./.github/workflows/cmake_build_and_test.yml
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        include:
          - build_distro: windows-latest
            build_os: windows
            compiler: msvc
            preset: tests
            build_type: Release

          - build_distro: windows-latest
            build_os: windows
            compiler: msvc
            preset: tests

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: gcc
            preset: benchmark

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: clang
            stdlib: libcxx
            preset: benchmark

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: gcc
            preset: tests

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: gcc
            preset: warnings

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: clang
            preset: warnings

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: clang
            preset: tests

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: gcc
            preset: coverage

          - build_distro: ubuntu-latest
            build_os: linux
            compiler: clang
            preset: coverage

          - build_distro: ubuntu-latest
            build_os: linux
            test_distro: windows-latest
            test_os: windows
            compiler: clangcl
            preset: tests

          - build_distro: ubuntu-latest
            build_os: linux
            test_distro: windows-latest
            test_os: windows
            compiler: clangcl
            preset: tests
            build_type: Release

    with:
      build_distro: ${{ matrix.build_distro }}
      build_os: ${{ matrix.build_os }}
      test_distro: ${{ matrix.test_distro || matrix.build_distro }}
      test_os: ${{ matrix.test_os || matrix.build_os }}
      compiler: ${{ matrix.compiler }}
      stdlib: ${{ matrix.stdlib || matrix.compiler == 'msvc' && 'msvcstl' || matrix.compiler == 'clangcl' && 'msvcstl' || matrix.compiler == 'clang' && 'libcxx' || 'libstdcxx' }}
      preset: ${{ matrix.preset }}
      build_type: ${{ matrix.build_type || matrix.preset == 'benchmark' && 'Release' || 'Debug' }}
      head_ref: ${{ github.event.pull_request.head.ref }}
      base_ref: ${{ github.event.pull_request.base.ref }}
    secrets: inherit
  status_check:
    runs-on: ubuntu-latest
    needs: run-matrix
    if: ${{ always() }}
    steps:
      - name: Check for failed jobs
        shell: bash
        run: |
          if [ -n "${{ needs.run-matrix.result }}" != "success" ]; then
            echo "Some jobs failed. Please check the logs."
            exit 1
          else
            echo "All jobs completed successfully."
          fi