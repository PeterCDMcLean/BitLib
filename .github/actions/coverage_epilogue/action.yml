name: "Coverage Epilogue"
description: "Processes coverage information with lcov and uploads it to coveralls/codecov"
inputs:
  build-output-dir:
    required: true
    description: 'Build output directory'
  compiler:
    required: true
    description: 'Compiler in use'
  GITHUB_TOKEN:
    required: true

runs:
  using: "composite"
  steps:
    - name: Generate Coverage Report (gcc)
      if: ${{ inputs.compiler == 'gcc' }}
      shell: bash
      run: |
        # Capture actual coverage data after tests
        lcov --capture \
             --directory "${{ inputs.build-output-dir }}" \
             --output-file coverage.info \
             --ignore-errors mismatch

        # Combine with baseline
        lcov --add-tracefile coverage.baseline \
             --add-tracefile coverage.info\
             --output-file coverage.info

        # Clean the coverage report from system and external deps
        lcov --remove coverage.info \
             '/usr/*' \
             '*/_deps/*' \
             '*/include/bitlib/bit-algorithms/libpopcnt.h' \
             '*/test/inc/*' \
             '*/test/src/*' \
             --output-file coverage.info

        # Show a summary in the logs
        lcov --list coverage.info

        # Generate an HTML report
        genhtml coverage.info --output-directory out/coverage

    - name: Generate Coverage Report (clang)
      if: ${{ inputs.compiler == 'clang' }}
      shell: bash
      run: |
        # Merge raw coverage into .profdata
        llvm-profdata merge -sparse coverage.profraw -o coverage.info

        # Show summary coverage report
        llvm-cov report ${{ inputs.build-output-dir }}/test/bitlib-tests \
            -instr-profile=coverage.info \
            -ignore-filename-regex='/usr/|_deps/|libpopcnt\.h|test/inc/|test/src/'

        # Generate HTML report
        llvm-cov show ${{ inputs.build-output-dir }}/test/bitlib-tests \
            -instr-profile=coverage.info \
            -format=html \
            -output-dir=out/coverage \
            -ignore-filename-regex='/usr/|_deps/|libpopcnt\.h|test/inc/|test/src/'

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          out/coverage
          coverage.baseline
          coverage.info

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ inputs.GITHUB_TOKEN }}
        path-to-lcov: coverage.info

    - name: Upload to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: coverage.info
        flags: unittests
        name: codecov-coverage-report
