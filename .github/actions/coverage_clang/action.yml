name: "Coverage Clang"
description: "enerates the baseline coverage"
inputs:
  build-output-dir:
    required: true
    description: 'Build output directory'
  GITHUB_TOKEN:
    required: true

runs:
  using: "composite"
  steps:
    - name: Test
      shell: bash
      run:
        LLVM_PROFILE_FILE=coverage.profdataraw ${{ inputs.build-output-dir }}/test/bitlib-tests

    - name: Generate Coverage Report
      shell: bash
      run: |
        # Merge raw coverage into .profdata
        llvm-profdata merge -sparse coverage.profdataraw -o coverage.profdata

        # Show summary coverage report
        llvm-cov report ${{ inputs.build-output-dir }}/test/bitlib-tests \
            -instr-profile=coverage.profdata \
            -ignore-filename-regex='/usr/|_deps/|libpopcnt\.h|test/inc/|test/src/'

        # Generate HTML report
        llvm-cov show ${{ inputs.build-output-dir }}/test/bitlib-tests \
            -instr-profile=coverage.profdata \
            -format=html \
            -output-dir=out/coverage_clang \
            -ignore-filename-regex='/usr/|_deps/|libpopcnt\.h|test/inc/|test/src/'

        llvm-cov export ${{ inputs.build-output-dir }}/test/bitlib-tests \
            -instr-profile=coverage.profdata \
            -format=lcov > coverage_clang.info

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage_clang_report
        path: |
          out/coverage_clang
          coverage.profdata
          coverage_clang.info

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ inputs.GITHUB_TOKEN }}
        path-to-lcov: coverage_clang.info

    - name: Upload to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: coverage_clang.info
        flags: unittests
        name: codecov-coverage-report
